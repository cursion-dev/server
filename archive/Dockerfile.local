# pull main ubuntu image and set platform to linux/amd64
FROM --platform=linux/amd64 ubuntu:latest
ENV DOCKER_DEFAULT_PLATFORM linux/amd64
ENV PYTHONUNBUFFERED 1
ENV DEBIAN_FRONTEND noninteractive

# increasing allocated memory to node
ENV NODE_OPTIONS=--max_old_space_size=7000
ENV NODE_OPTIONS="--max-old-space-size=7000"

# telling Puppeteer to skip installing Chrome
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true 

# telling phantomas where Chrome binary is and that we're in docker
ENV PHANTOMAS_CHROMIUM_EXECUTABLE=/usr/bin/google-chrome-stable
ENV DOCKERIZED=yes

# create the app user
RUN groupadd --system app & useradd --system app 

# installing python3 & pip
RUN apt-get update && apt-get install -y python3.10 python3-pip

# installing system deps
RUN apt-get update && apt-get install -y postgresql postgresql-client gcc \
    gfortran openssl libpq-dev curl libjpeg-dev libfontconfig firefox \ 
    apt-transport-https software-properties-common libglib2.0-0 libsm6 \ 
    libxrender1 libxext6 libgl1

# installing google-chrome-stable
RUN curl -LO https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
RUN apt-get install -y ./google-chrome-stable_current_amd64.deb
RUN rm google-chrome-stable_current_amd64.deb

# install microsoft-edge-stable
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
    install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/ && \
    sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > \
    /etc/apt/sources.list.d/microsoft-edge.list' && \
    apt-get update && apt-get install -y microsoft-edge-stable && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* microsoft.gpg

# installing node and npm
RUN apt-get update && apt-get install nodejs npm -y --no-install-recommends \
    && npm install -g n && n lts

# begin npm portion
RUN npm cache clean --force

# installing lighthouse & yellowlabtools
RUN npm install -g lighthouse lighthouse-plugin-crux lodash

# setting --no-sandbox for Phantomas 
RUN google-chrome-stable --no-sandbox --version

# installing requirements
RUN python3 -m pip install --break-system-packages --upgrade setuptools
COPY ./setup/requirements/requirements-staging.txt /requirements-staging.txt
RUN python3 -m pip install --break-system-packages -r /requirements-staging.txt

# setting working dir
RUN mkdir /app
COPY ./app /app
WORKDIR /app

# setting ownership
RUN chown -R app:app /app
RUN chown -R app:app /usr/bin/google-chrome-stable
RUN chown -R app:app /usr/bin/firefox
RUN chown -R app:app /usr/bin/microsoft-edge-stable

# staring up services
COPY ./setup/scripts/local-entrypoint.sh "/local-entrypoint.sh"
ENTRYPOINT [ "/local-entrypoint.sh" ]
