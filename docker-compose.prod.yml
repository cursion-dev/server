services:


  app:
    container_name: cursion-app
    hostname: cursion-app
    restart: always
    platform: linux/amd64
    privileged: true
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/entrypoint.sh", "app", "remote"]
    expose:
      - 8000
    env_file:
      - ./env/.env.prod
    volumes:
      - app:/app
      - static_volume:/app/static
    depends_on:
      - db

  
  db:
    container_name: cursion-db
    hostname: cursion-db
    image: postgres:14-alpine
    ports:
      - "5432"
    env_file:
      - ./env/.env.prod
    volumes: 
      - pgdata:/var/lib/postgresql/data


  redis:
    container_name: cursion-redis
    hostname: cursion-redis
    image: redis:alpine
    ports:
      - "6379"


  celery:
    container_name: cursion-celery
    hostname: cursion-celery
    privileged: true
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/entrypoint.sh", "celery"]
    env_file:
      - ./env/.env.prod
    volumes:
      - celery:/app
    depends_on:
      - redis
      - app
      - db


  beat:
    container_name: cursion-beat
    hostname: cursion-beat
    privileged: true
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/entrypoint.sh", "beat"]
    volumes:
      - beat:/app
    env_file:
      - ./env/.env.prod
    depends_on:
      - redis
      - celery
      - app
      - db


  yellowlab:
    container_name: yellowlab
    hostname: yellowlab
    privileged: true
    restart: always
    image: cursion/ylt
    ports:
      - 8383:8383
    depends_on:
      - redis
      - celery 
      - app
      - db


  nginx-proxy:
    container_name: nginx-proxy
    hostname: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/app/static
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - app
  
  
  nginx-proxy-letsencrypt:
    container_name: nginx-proxy-letsencrypt
    hostname: nginx-proxy-letsencrypt
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=youremail@yourdomain.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - letsencrypt-acme:/etc/acme.sh
    depends_on:
      - nginx-proxy


volumes:
  app:
  celery:
  beat:
  static_volume:
  letsencrypt-acme:
  pgdata:
  certs:
  html:
  vhost: