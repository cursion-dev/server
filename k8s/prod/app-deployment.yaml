apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  labels:
    deployment: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-deployment
  template:
    metadata:
      labels:
        app: app-deployment
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: scanerr-server
          image: <IMAGE> # scanerr/server:80a9a46 # 
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          command: ["/bin/sh", "-c"]
          args: 
            - > 
                python3 manage.py wait_for_db &&
                python manage.py showmigrations &&
                python3 manage.py makemigrations --no-input &&
                python3 manage.py migrate --no-input &&
                python3 manage.py collectstatic --no-input &&
                python3 manage.py create_admin &&
                python3 manage.py driver_s_test &&
                python3 manage.py driver_p_test &&
                gunicorn  --timeout 1000 --graceful-timeout 1000 --keep-alive 3 --log-level debug scanerr.wsgi:application --bind 0.0.0.0:8000
            
          envFrom:
            - configMapRef:
                name: app-configs
          env:
            - name: THIS_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            limits:
              cpu: "2"
              memory: "4Gi"
            requests:
              cpu: "1"
              memory: "1Gi"
---

apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    service: app
spec:
  # type: NodePort
  # externalTrafficPolicy: Cluster
  selector:
    app:  app-deployment
  ports:
  - name: http
    port: 80
    targetPort: 8000
