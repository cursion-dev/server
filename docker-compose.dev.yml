version: '3'

services:
  app:
    container_name: scanerr-app
    privileged: true
    init: true
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
      - static_volume:/app/static
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py makemigrations  --no-input &&
             python3 manage.py migrate  --no-input &&
             python3 manage.py collectstatic --no-input &&
             python3 manage.py wait_for_db &&
             python3 manage.py create_admin &&
             python3 manage.py driver_s_test &&
             python3 manage.py driver_p_test && 
             sed -i 's/ulimit -Hn/# ulimit -Hn/g' /etc/init.d/docker;
             service docker start && 
             sleep 10 &&
             docker run -d --privileged --env 'DEBUG=*' -p 8383:8383 ousamabenyounes/yellowlabtools &&
             gunicorn  --timeout 1000 --graceful-timeout 1000 --keep-alive 3 --log-level debug scanerr.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    env_file:
      - ./env/.env.dev
    

  db:
    image: postgres:10-alpine
    ports:
      - "5432"
    env_file:
      - ./env/.env.dev
    volumes: 
      - pgdata:/var/lib/postgresql/data
    


  redis:
    image: redis:alpine
    ports:
      - "6379"
    


  celery:
    container_name: scanerr-celery
    privileged: true
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "sed -i 's/ulimit -Hn/# ulimit -Hn/g' /etc/init.d/docker;
             service docker start && 
             sleep 10 &&
             docker run -d --privileged --env 'DEBUG=*' -p 8383:8383 ousamabenyounes/yellowlabtools &&
             celery -A scanerr worker --beat --scheduler django --loglevel=info"
    volumes:
      - ./app:/scanerr
    env_file:
      - ./env/.env.dev
    depends_on:
      - redis
      - app
      - db
    
      

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/app/static
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - app
  
  

  nginx-proxy-letsencrypt:
    image: nginxproxy/acme-companion  # LEGACY -> jrcs/letsencrypt-nginx-proxy-companion 
    env_file:
      - ./env/.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - letsencrypt-acme:/etc/acme.sh
    depends_on:
      - nginx-proxy



volumes:
  static_volume:
  letsencrypt-acme:
  certs:
  html:
  vhost:
  pgdata:
  yellowlab: