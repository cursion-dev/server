# Generated by Django 3.2.3 on 2023-07-27 01:50

import api.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(default=False)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(blank=True, default='free', max_length=1000, null=True)),
                ('code', models.CharField(blank=True, max_length=1000, null=True)),
                ('max_sites', models.IntegerField(blank=True, default=1, null=True)),
                ('max_pages', models.IntegerField(blank=True, default=25, null=True)),
                ('cust_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('sub_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('price_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('price_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('slack', models.JSONField(blank=True, default=api.models.get_slack_default, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Automation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('expressions', models.JSONField(blank=True, default=api.models.get_expressions_default, null=True)),
                ('actions', models.JSONField(blank=True, default=api.models.get_actions_default, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('steps', models.JSONField(blank=True, default=api.models.get_steps_default, null=True)),
                ('tags', models.JSONField(blank=True, default=api.models.get_tags_default, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('mask_id', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('page_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('info', models.JSONField(blank=True, default=api.models.get_info_default, null=True)),
                ('tags', models.JSONField(blank=True, default=api.models.get_tags_default, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.JSONField(blank=True, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_completed', models.DateTimeField(blank=True, null=True)),
                ('html', models.TextField(blank=True, null=True)),
                ('logs', models.JSONField(blank=True, null=True)),
                ('images', models.JSONField(blank=True, null=True)),
                ('lighthouse', models.JSONField(blank=True, default=api.models.get_lh_default, null=True)),
                ('yellowlab', models.JSONField(blank=True, default=api.models.get_yl_default, null=True)),
                ('configs', models.JSONField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=api.models.get_tags_default, null=True)),
                ('page', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.page')),
                ('paired_scan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.scan')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('site_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_crawl_started', models.DateTimeField(blank=True, null=True)),
                ('time_crawl_completed', models.DateTimeField(blank=True, null=True)),
                ('info', models.JSONField(blank=True, default=api.models.get_small_info_default, null=True)),
                ('tags', models.JSONField(blank=True, default=api.models.get_tags_default, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testcase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('case_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_completed', models.DateTimeField(blank=True, null=True)),
                ('passed', models.BooleanField(default=False)),
                ('steps', models.JSONField(blank=True, null=True)),
                ('configs', models.JSONField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.case')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_completed', models.DateTimeField(blank=True, null=True)),
                ('type', models.JSONField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('component_scores', models.JSONField(blank=True, default=api.models.get_scores_default, null=True)),
                ('html_delta', models.JSONField(blank=True, null=True)),
                ('logs_delta', models.JSONField(blank=True, null=True)),
                ('lighthouse_delta', models.JSONField(blank=True, default=api.models.get_lh_delta_default, null=True)),
                ('yellowlab_delta', models.JSONField(blank=True, default=api.models.get_yl_delta_default, null=True)),
                ('images_delta', models.JSONField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=api.models.get_tags_default, null=True)),
                ('pre_scan_configs', models.JSONField(blank=True, null=True)),
                ('post_scan_configs', models.JSONField(blank=True, null=True)),
                ('page', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.page')),
                ('post_scan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_scan', to='api.scan')),
                ('pre_scan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pre_scan', to='api.scan')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.site')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_created', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('task_type', models.CharField(default='test', max_length=100)),
                ('timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('begin_date', models.DateTimeField(default=datetime.datetime.now)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('frequency', models.CharField(default='monthly', max_length=100)),
                ('task', models.CharField(blank=True, max_length=500, null=True)),
                ('crontab_id', models.CharField(blank=True, max_length=500, null=True)),
                ('periodic_task_id', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, default='Active', max_length=100, null=True)),
                ('extras', models.JSONField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('automation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assoc_auto', to='api.automation')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.page')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='scan',
            name='site',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.site'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('path', models.CharField(blank=True, max_length=1000, null=True)),
                ('type', models.JSONField(blank=True, null=True)),
                ('info', models.JSONField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.page')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_completed', models.DateTimeField(blank=True, null=True)),
                ('successful', models.BooleanField(default=False)),
                ('info_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('progress', models.FloatField(blank=True, null=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.site')),
            ],
        ),
        migrations.AddField(
            model_name='page',
            name='site',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.site'),
        ),
        migrations.AddField(
            model_name='page',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, max_length=1000, null=True)),
                ('type', models.CharField(blank=True, max_length=1000, null=True)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('path', models.CharField(blank=True, max_length=1000, null=True)),
                ('request_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, max_length=1000, null=True)),
                ('request_payload', models.JSONField(blank=True, null=True)),
                ('response_payload', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pay_method_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('brand', models.CharField(blank=True, max_length=1000, null=True)),
                ('exp_month', models.CharField(blank=True, max_length=1000, null=True)),
                ('exp_year', models.CharField(blank=True, max_length=1000, null=True)),
                ('last_four', models.CharField(blank=True, max_length=1000, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='automation',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assoc_sch', to='api.schedule'),
        ),
        migrations.AddField(
            model_name='automation',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
